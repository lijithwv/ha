living_night_routine:
  sequence:
  - action: script.living_corner_lamp_on
    metadata: {}
    data:
      brightness: 10
  - action: script.living_table_lamp_off
    metadata: {}
    data: {}
  - action: script.living_tv_off
    metadata: {}
    data: {}
  alias: Living Night Routine
  description: ''
living_away_routine:
  sequence:
  - action: light.turn_off
    metadata: {}
    data: {}
    target:
      area_id: living_room
  - if:
    - condition: state
      entity_id: remote.livingroomtv
      state: 'on'
    then:
    - action: remote.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: remote.livingroomtv
  alias: Living Away Routine
  description: ''
porch_light_on:
  sequence:
  - target:
      entity_id: light.porch_light
    data:
      color_temp_kelvin: 2000
      brightness_pct: '{{ brightness | default(100) }}'
    action: light.turn_on
  alias: Porch Light On
  fields:
    brightness:
      description: Brightness percentage (1-100)
      example: 50
  description: ''
living_corner_lamp_on:
  sequence:
  - target:
      entity_id: light.living_corner_lamp
    data:
      color_temp_kelvin: 2000
      brightness_pct: '{{ brightness | default(100) }}'
    action: light.turn_on
  alias: Living Corner Lamp On
  fields:
    brightness:
      description: Brightness percentage (1-100)
      example: 50
  description: ''
living_table_lamp_on:
  sequence:
  - action: light.turn_on
    metadata: {}
    data:
      color_temp_kelvin: 2000
      brightness_pct: '{{ brightness | default(30) }}'
    target:
      entity_id: light.living_table_lamp
  fields:
    brightness:
      description: Brightness percentage (1-100)
      example: 50
  description: ''
  alias: Living Table Lamp On
porch_light_off:
  sequence:
  - action: light.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: light.porch_light
  alias: Porch Light Off
  description: ''
living_corner_lamp_off:
  sequence:
  - action: light.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: light.living_corner_lamp
  alias: Living Corner Lamp Off
  description: ''
living_table_lamp_off:
  sequence:
  - action: light.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: light.living_table_lamp
  alias: Living Table Lamp Off
  description: ''
backup_ha_config_to_github:
  sequence:
  - action: shell_command.git_backup
    metadata: {}
    data: {}
  alias: Backup HA Config to GitHub
  description: ''
theatre_sunset_light_on:
  sequence:
  - action: light.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: light.anko_wi_fi_sunset_light
  alias: Theatre Sunset Light On
  description: ''
theatre_sunset_light_off:
  sequence:
  - action: light.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: light.anko_wi_fi_sunset_light
  alias: Theatre Sunset light off
  description: ''
living_evening_routine:
  sequence:
  - action: script.living_corner_lamp_on
    metadata: {}
    data: {}
  - action: script.living_table_lamp_on
    metadata: {}
    data: {}
  - action: script.living_tv_on
    metadata: {}
    data: {}
  alias: Living Evening Routine
  description: ''
living_tv_on:
  sequence:
  - if:
    - condition: template
      value_template: '{{ states(''remote.livingroomtv'') != ''on'' }}'
    then:
    - action: remote.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: remote.livingroomtv
  alias: Living TV On
  description: ''
living_tv_off:
  sequence:
  - if:
    - condition: template
      value_template: '{{ states(''remote.livingroomtv'') != ''off'' }}'
    then:
    - action: remote.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: remote.livingroomtv
  alias: Living TV Off
  description: ''
away_routine:
  sequence:
  - action: light.turn_off
    metadata: {}
    data: {}
    target:
      area_id:
      - living_room
      - theatre
  - action: script.living_tv_off
    metadata: {}
    data: {}
  alias: Away Routine
  description: ''
doors_check:
  sequence:
  - variables:
      sensors:
      - binary_sensor.living_room_sensor_sliding_door_window
      - binary_sensor.laundry_room_sensor_sliding_door_window
      - binary_sensor.entrance_sensor_door
      garage_not_closed: '{{ ''closed'' in states(''sensor.garage_status'') }}'
      open_sensors: '{{ sensors | select(''equalto'', ''Open'') | map(''entity_id'')
        | list }}

        '
      any_open_sensors: '{{ open_sensors | count > 0 }}'
      bad_sensors: "{{ sensors\n   | select('in', ['unknown', 'unavailable'])\n   |
        map('entity_id') | list }}\n"
      any_bad_sensors: '{{ bad_sensors | count > 0 }}'
  - if:
    - condition: template
      value_template: '{{ any_open_sensors or any_bad_sensors or garage_not_closed
        }} '
    then:
    - data:
        title: Open Door Sensors
        message: '{% if garage_not_closed %} Garage is not closed. {% endif %} {%
          if any_open_sensors %} The following doors are open: {{ open_sensors | map(''state_attr'',''friendly_name'')
          | join('', '') }} {% endif %} {% if any_bad_sensors  %} The following doors
          are in bad status: {{ bad_sensors | map(''state_attr'',''friendly_name'')
          | join('', '') }} {% endif %}

          '
      action: notify.mobile_app_iphone_l
  - action: notify.mobile_app_iphone_l
    metadata: {}
    data:
      message: "    - {{ binary_sensor.living_room_sensor_sliding_door_window }}\n
        \   - {{ binary_sensor.laundry_room_sensor_sliding_door_window}}\n    - {{binary_sensor.entrance_sensor_door}}"
  alias: Doors Check
  description: ''
